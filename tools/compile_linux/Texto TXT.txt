# Instructions for Building OpenSSL with the `build_openssl.py` Script

This document provides all the necessary information to use the `build_openssl.py` script to compile OpenSSL for multiple platforms from Windows, Linux, and macOS systems.

## Table of Contents

- [Prerequisites](#prerequisites)
  - [Listing Installed Compilers](#listing-installed-compilers)
  - [Required Compilers](#required-compilers)
    - [x86](#x86)
    - [x86_64](#x86_64)
    - [arm32](#arm32)
    - [arm64](#arm64)
    - [riscv64](#riscv64)
    - [ppc32](#ppc32)
    - [ppc64](#ppc64)
- [Configuration](#configuration)
  - [The `config.cfg` File](#the-configcfg-file)
- [Using the Script](#using-the-script)
  - [Step-by-Step Guide](#step-by-step-guide)
- [Important Notes](#important-notes)
- [Troubleshooting](#troubleshooting)

## Prerequisites

Before running the script, ensure that the following prerequisites are met:

- **Python 3**: The script is written in Python 3. Make sure Python 3 is installed on your system.
- **Cross-Compilers**: Appropriate cross-compilers for each target platform must be installed and available in the system's `PATH`.
- **Development Tools**: Tools such as `make`, `gcc`, `tar`, and other build tools must be installed.

### Listing Installed Compilers

To check which compilers are installed on your system, you can use the following commands:

- **Linux/macOS**:

  ```bash
  # List all gcc compilers
  compilers=$(compgen -c gcc)
  echo "Available GCC compilers:"
  echo "$compilers"

  # Or search for specific cross-compilers
  which arm-linux-gnueabihf-gcc aarch64-linux-gnu-gcc riscv64-linux-gnu-gcc powerpc-linux-gnu-gcc powerpc64-linux-gnu-gcc

