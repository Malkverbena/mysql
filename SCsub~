#!/usr/bin/env python
# SCsub


Import('env')
mysql_env = env.Clone()


sources = [
	"register_types.cpp",
	"scr/helpers.cpp",
	"scr/sql_conn.cpp",
	"scr/mysql.cpp",
#	"scr/sql_error.cpp",
	"scr/sql_result.cpp",
]



mysql_env.Append(CXXFLAGS='-std=c++20')


# INCLUDE:
#mysql_env.Prepend(CPPPATH=["/media/cleber/DATA/COMPILATIONS/dependencies/boost/libs/mysql/include/boost"])  FUNCIONA!
mysql_env.Prepend(CPPPATH=["/media/cleber/DATA/COMPILATIONS/godot_modules/mysql/deb/boost/include"]) 


# LIB
/media/cleber/DATA/COMPILATIONS/godot_modules/mysql/deb/boost/
#env.Append(LIBPATH=["#/media/cleber/DATA/COMPILATIONS/dependencies/boost/stage/lib"]) FUNCIONA!
env.Append(LIBPATH=["#/media/cleber/DATA/COMPILATIONS/godot_modules/mysql/deb/boost/lib"])






env.Append(LIBPATH=['#/media/cleber/DATA/COMPILATIONS/godot_modules/mysql/deb/ssl/lib64'])
env.Append(LIBS=["libcrypto", "libssl", "libboost_thread"])


mysql_env.add_source_files(env.modules_sources, sources)



# REFERENCES
#	project(boost_mysql_example LANGUAGES CXX)

#	find_package(Boost REQUIRED COMPONENTS headers)
#	find_package(Threads REQUIRED)
#	find_package(OpenSSL REQUIRED)

#	add_executable(main main.cpp)
#	target_link_libraries(main PRIVATE Boost::headers Threads::Threads OpenSSL::Crypto OpenSSL::SSL)
